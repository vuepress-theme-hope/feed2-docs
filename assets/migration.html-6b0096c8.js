import{a2 as e,Y as o,Z as d,a3 as t}from"./framework-449699dd.js";const i={},c=t('<p>名称从 <code>@mr-hope/vuepress-feed</code> 改为 <code>vuepress-plugin-feed2</code>. ⚠</p><h2 id="输出选项变更" tabindex="-1"><a class="header-anchor" href="#输出选项变更" aria-hidden="true">#</a> 输出选项变更</h2><ul><li><p>所有的输出选项从插件选项中的 <code>output</code> 选项移出到根选项下，并进行了重命名。</p><ul><li><p><code>output.atom.enable</code> 重命名为 <code>atom</code></p></li><li><p><code>output.json.enable</code> 重命名为 <code>json</code></p></li><li><p><code>output.rss.enable</code> 重命名为 <code>rss</code></p></li><li><p><code>output.atom.path</code> 重命名为 <code>atomOutputFilename</code></p></li><li><p><code>output.json.path</code> 重命名为 <code>jsonOutputFilename</code></p></li><li><p><code>output.rss.path</code> 重命名为 <code>rssOutputFilename</code></p></li></ul></li><li><p>现在插件不会再默认生成三种格式，你需要手动启用以输出需要的格式。</p><ul><li><code>atom</code>, <code>json</code> 和 <code>rss</code> 现在默认为 <code>false</code></li></ul></li></ul><h2 id="新增功能" tabindex="-1"><a class="header-anchor" href="#新增功能" aria-hidden="true">#</a> 新增功能</h2><ul><li><p>支持通过 <code>removedElements</code> 选项移除自定义组件和元素 <img src="https://img.shields.io/badge/-新增-brightgreen" alt="新增"></p></li><li><p>可视化的 Atom 和 RSS 流，支持通过 <code>atomXslFilename</code> <code>atomXslTemplate</code> <code>rssXslFilename</code> 和 <code>rssXslTemplate</code> 配置 <img src="https://img.shields.io/badge/-新增-brightgreen" alt="新增"></p></li><li><p>通过 <code>getter</code> 选项完全自定义 Feed 生成 <img src="https://img.shields.io/badge/-新增-brightgreen" alt="新增"></p></li><li><p>多分类支持 <img src="https://img.shields.io/badge/-新增-brightgreen" alt="新增"></p></li><li><p>更美观的日志输出 <img src="https://img.shields.io/badge/-改进-blue" alt="改进"></p></li></ul>',5),l=[c];function s(a,p){return o(),d("div",null,l)}const n=e(i,[["render",s],["__file","migration.html.vue"]]);export{n as default};
