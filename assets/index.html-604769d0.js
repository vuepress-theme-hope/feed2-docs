import{a2 as t,Y as i,Z as r,a0 as e,a1 as a,_ as s,$ as n,a3 as o,D as c}from"./framework-449699dd.js";const d={},p=o(`<h2 id="hostname" tabindex="-1"><a class="header-anchor" href="#hostname" aria-hidden="true">#</a> hostname</h2><ul><li>类型: <code>string</code></li><li>必填: 是</li></ul><p>部署网站的域名。</p><h2 id="atom" tabindex="-1"><a class="header-anchor" href="#atom" aria-hidden="true">#</a> atom</h2><ul><li>类型: <code>boolean</code></li><li>默认值: <code>false</code></li></ul><p>是否启用 Atom 格式输出。</p><h2 id="json" tabindex="-1"><a class="header-anchor" href="#json" aria-hidden="true">#</a> json</h2><ul><li>类型: <code>boolean</code></li><li>默认值: <code>false</code></li></ul><p>是否启用 JSON 格式输出。</p><h2 id="rss" tabindex="-1"><a class="header-anchor" href="#rss" aria-hidden="true">#</a> rss</h2><ul><li>类型: <code>boolean</code></li><li>默认值: <code>false</code></li></ul><p>是否启用 RSS 格式输出。</p><h2 id="image" tabindex="-1"><a class="header-anchor" href="#image" aria-hidden="true">#</a> image</h2><ul><li>类型: <code>string</code></li></ul><p>一个大的图片，用作 feed 展示。</p><h2 id="icon" tabindex="-1"><a class="header-anchor" href="#icon" aria-hidden="true">#</a> icon</h2><ul><li>类型: <code>string</code></li></ul><p>一个小的图标，显示在订阅列表中。</p><h2 id="count" tabindex="-1"><a class="header-anchor" href="#count" aria-hidden="true">#</a> count</h2><ul><li>类型: <code>number</code></li><li>默认值: <code>100</code></li></ul><p>设置 feed 的最大项目数量。在所有页面排序好后，插件会截取前 count 个项目。</p><p>如果你的站点文章很多，你应该考虑设置这个选项以减少 feed 文件大小。</p><h2 id="removedelements" tabindex="-1"><a class="header-anchor" href="#removedelements" aria-hidden="true">#</a> removedElements</h2><ul><li>类型: <code>string[]</code></li><li>默认值: <code>[&quot;ExternalLinkIcon&quot;]</code></li></ul><p>应在 Feed 中删除的自定义元素或组件。</p><h2 id="filter" tabindex="-1"><a class="header-anchor" href="#filter" aria-hidden="true">#</a> filter</h2><ul><li><p>类型: <code>(page: Page)=&gt; boolean</code></p></li><li><p>默认值:</p><div class="language-typescript" data-ext="ts"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">({ </span><span style="color:#E06C75;font-style:italic;">frontmatter</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">filePathRelative</span><span style="color:#ABB2BF;"> }: </span><span style="color:#E5C07B;">Page</span><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#56B6C2;">!</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">frontmatter</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">home</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">||</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#56B6C2;">!</span><span style="color:#E06C75;">filePathRelative</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">||</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">frontmatter</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">article</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">===</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">||</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">frontmatter</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">feed</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">===</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">false</span></span>
<span class="line"><span style="color:#ABB2BF;">  );</span></span>
<span class="line"></span></code></pre></div></li></ul><p>自定义的过滤函数，用于过滤哪些项目在 feed 中显示。</p><h2 id="sort" tabindex="-1"><a class="header-anchor" href="#sort" aria-hidden="true">#</a> sort</h2><ul><li>类型: <code>(pageA: Page, pageB: Page)=&gt; number</code></li></ul><p>自定义排序函数，用于对站点中的页面进行排序。</p><p>最终生成的 feed 文件将会按照这个顺序对项目进行显示。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>强烈建议设置这个选项，否则 feed 流中，项目的顺序完全由 VuePress 默认输出的 pages 顺序决定。</p><p>你可以按照自己的需求对站点内的页面进行排序。</p></div><h2 id="channel" tabindex="-1"><a class="header-anchor" href="#channel" aria-hidden="true">#</a> channel</h2><p><code>channel</code> 选项用于配置 Feed 频道。</p>`,35),h=o('<h2 id="atomoutputfilename" tabindex="-1"><a class="header-anchor" href="#atomoutputfilename" aria-hidden="true">#</a> atomOutputFilename</h2><ul><li>类型: <code>string</code></li><li>默认值: <code>&quot;atom.xml&quot;</code></li></ul><p>Atom 格式输出路径，相对于输出路径。</p><h2 id="atomxsltemplate" tabindex="-1"><a class="header-anchor" href="#atomxsltemplate" aria-hidden="true">#</a> atomXslTemplate</h2><ul><li>类型: <code>string</code></li><li>默认值: <code>&quot;vuepress-plugin-feed2/templates/atom.xsl&quot;</code></li></ul><p>Atom xsl 模板文件路径</p><h2 id="atomxslfilename" tabindex="-1"><a class="header-anchor" href="#atomxslfilename" aria-hidden="true">#</a> atomXslFilename</h2><ul><li>类型: <code>string</code></li><li>默认值: <code>&quot;atom.xsl&quot;</code></li></ul><p>Atom xsl 输出路径，相对于输出路径。</p><h2 id="jsonoutputfilename" tabindex="-1"><a class="header-anchor" href="#jsonoutputfilename" aria-hidden="true">#</a> jsonOutputFilename</h2><ul><li>类型: <code>string</code></li><li>默认值: <code>&quot;feed.json&quot;</code></li></ul><p>JSON 格式输出路径，相对于输出路径。</p><h2 id="rssoutputfilename" tabindex="-1"><a class="header-anchor" href="#rssoutputfilename" aria-hidden="true">#</a> rssOutputFilename</h2><ul><li>类型: <code>string</code></li><li>默认值: <code>&quot;rss.xml&quot;</code></li></ul><p>RSS 格式输出路径，相对于输出路径。</p><h2 id="rssxsltemplate" tabindex="-1"><a class="header-anchor" href="#rssxsltemplate" aria-hidden="true">#</a> rssXslTemplate</h2><ul><li>类型: <code>string</code></li><li>默认值: <code>&quot;vuepress-plugin-feed2/templates/rss.xsl&quot;</code></li></ul><p>RSS xsl 模板文件路径。</p><h2 id="rssxslfilename" tabindex="-1"><a class="header-anchor" href="#rssxslfilename" aria-hidden="true">#</a> rssXslFilename</h2><ul><li>类型: <code>string</code></li><li>默认值: <code>&quot;rss.xsl&quot;</code></li></ul><p>RSS xsl 输出路径，相对于输出路径。</p><h2 id="getter" tabindex="-1"><a class="header-anchor" href="#getter" aria-hidden="true">#</a> getter</h2><p>Feed 生成控制器</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>插件已经在默认情况下提供了合理的获取器，如果你需要完全控制 Feed 生成，你可以设置此项。</p></div>',24),u=e("h2",{id:"locales",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#locales","aria-hidden":"true"},"#"),a(" locales")],-1),B=e("ul",null,[e("li",null,[a("类型: "),e("code",null,"Record<string, BaseFeedOptions>")]),e("li",null,"必填: 否")],-1),m=e("p",null,"你可以将它用于每个语言环境的特定选项。",-1),f=e("p",null,[a("除 "),e("code",null,"hostname"),a(" 外，上述任何选项均受支持。")],-1);function x(y,g){const l=c("RouterLink");return i(),r("div",null,[p,e("p",null,[a("可用选项详见 "),s(l,{to:"/zh/config/channel.html"},{default:n(()=>[a("配置 → 频道设置")]),_:1})]),h,e("p",null,[a("详见 "),s(l,{to:"/zh/config/getter.html"},{default:n(()=>[a("Feed 生成器")]),_:1}),a(".")]),u,B,m,f])}const b=t(d,[["render",x],["__file","index.html.vue"]]);export{b as default};
